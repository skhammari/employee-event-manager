version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: org_app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=org
      - DB_USERNAME=org_user
      - REDIS_HOST=redis
    volumes:
      - ./storage:/var/www/storage
    networks:
      - org_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: mysql:8.0
    container_name: org_db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: org
      MYSQL_USER: org_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - org_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-character-set-client-handshake

  redis:
    image: redis:alpine
    container_name: org_redis
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
      - org_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: org_proxy
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    networks:
      - org_network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: org_ssl
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${SSL_EMAIL}

networks:
  org_network:
    driver: bridge

volumes:
  dbdata:
  certs:
  vhost:
  html:
  acme: 